in
pop [0]
in
pop [1]
in
pop [2]
push 888
pop [3]
push -111
pop [4]
push [0]
push 0
jne lb_10:  # if
push [2]
push 0
jne lb_11:  # if
push [1]
push 0
jne lb_12:  # if
push [3]
pop [5]
lb_12:
push [1]
push 0
je lb_13:  # if
push 0
pop [5]
lb_13:
lb_11:
push [2]
push 0
je lb_14:  # if
push 0
push [2]
push [1]
div
sub
pop [5]
lb_14:
push [5]
out
lb_10:
push [0]
push 0
je lb_15:  # if
push [1]
push [1]
mul
push 4
push [0]
mul
push [2]
mul
sub
pop [6]
push [6]
push 0
jne lb_16:  # if
push 0
push [1]
push 2
push [0]
mul
div
sub
pop [5]
push [5]
out
lb_16:
push [6]
push 0
jae lb_17:  # if
push [4]
pop [5]
push [5]
out
lb_17:
push [6]
push 0
jbe lb_18:  # if
push [6]
sqrt
pop [7]
push [7]
push [1]
sub
push 2
div
pop [5]
push 0
push [7]
push [1]
add
push 2
div
sub
pop [8]
push [5]
out
push [8]
out
lb_18:
lb_15:
hlt
