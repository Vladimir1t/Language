in
pop [0]
in
pop [1]
in
pop [2]
in
pop [3]
push 888
pop [4]
push -111
pop [5]
lb_10:   # while
push [3]
push 12
ja lb_11:
push [3]
out
push [3]
push 1
add
pop [3]
jmp lb_10:  # jump to start of while
lb_11:
push [0]
push 0
jne lb_12:  # if
push [2]
push 0
jne lb_13:  # if
push [1]
push 0
jne lb_14:  # if
push [4]
pop [6]
lb_14:
push [1]
push 0
je lb_15:  # if
push 0
pop [6]
lb_15:
lb_13:
push [2]
push 0
je lb_16:  # if
push 0
push [2]
push [1]
div
sub
pop [6]
lb_16:
push [6]
out
lb_12:
push [0]
push 0
je lb_17:  # if
push [1]
push [1]
mul
push 4
push [0]
mul
push [2]
mul
sub
pop [7]
push [7]
push 0
jne lb_18:  # if
push 0
push [1]
push 2
push [0]
mul
div
sub
pop [6]
push [6]
out
lb_18:
push [7]
push 0
jae lb_19:  # if
push [5]
pop [6]
push [6]
out
lb_19:
push [7]
push 0
jbe lb_20:  # if
push [7]
sqrt
pop [8]
push [8]
push [1]
sub
push 2
div
pop [6]
push 0
push [8]
push [1]
add
push 2
div
sub
pop [9]
push [6]
out
push [9]
out
lb_20:
lb_17:
hlt
